{"version":3,"sources":["firebase.js","redux/userDucks.js","logo/bass-logo-store.png","components/Navbar.jsx","components/Index.jsx","sound/Korg-N1R-Metronome-Click.wav","components/Metronome.jsx","redux/bassModelsDucks.js","redux/stringsDucks.js","components/Warwick.jsx","components/Ibanez.jsx","components/Epiphone.jsx","components/BassStrings.jsx","redux/bassTabsDucks.js","components/PdfBassTabs.jsx","components/Cart.jsx","components/Footer.jsx","App.jsx","redux/store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","storage","initData","loading","active","user","cartSize","LOADING","LOGIN_USER","LOAD_SUCCESS_USER","CLOSE_SESSION","ADD_CART_ACTION_TO_LOCAL","addCart","cart","dispatch","a","onAuthStateChanged","type","items","length","console","log","collection","doc","uid","update","localStorage","setItem","JSON","stringify","error","withRouter","useDispatch","useSelector","store","googleUser","userDisplay","displayName","userImg","display","logOut","removeItem","signOut","className","to","src","logo","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","exact","xmlns","width","height","fill","viewBox","d","onClick","date","Date","provider","GoogleAuthProvider","signInWithPopup","response","email","photoURL","get","then","ref","data","set","Index","useState","setCart","useEffect","getItem","parse","pathname","state","view","stringbass","img","title","info","price","Metronome","seconds","setSeconds","play","setPlay","Audio","click","sliderValue","setSliderValue","result","korg","window","setInterval","clearInterval","cx","cy","r","min","max","value","onChange","e","target","parseInt","WARWICK_FOLDER","IBANEZ_FOLDER","EPIPHONE_FOLDER","resutls","list","model","GET_WARWICK_MODELS","GET_WARWICK_MODELS_LOCAL","GET_IBANEZ_MODELS","GET_IBANEZ_MODELS_LOCAL","GET_EPIPHONE_MODELS","GET_EPIPHONE_MODELS_LOCAL","DDRIO_FOLDER","DR_FOLDER","ERNIE_BALL_FOLDER","FENDER_FOLDER","ddrio","dr","ernie","fender","GET_DADDARIO_MODELS","GET_DR_MODELS","GET_ERNIE_BALL_MODELS","GET_FENDER_MODELS","GET_DADDARIO_MODELS_LOCAL","GET_DR_MODELS_LOCAL","GET_ERNIE_BALL_MODELS_LOCAL","GET_FENDER_MODELS_LOCAL","getDaddarioStrings","ddrio_info_160","ddrio_info_165","ddrio_info_170","ddrio_info_230","exl160","exl165","exl170","exl230","getDRStrings","dr_info_black_b","dr_info_hi_beam_m","dr_info_hi_beam_xl","dr_info_lo_rider","drblackb","drhibeamm","drhibeamxl","drlorider","getErnieBallStrings","ernie_ball_info_2813","ernie_ball_info_2832","ernie_ball_info_2833","ernie_ball_info_2834","eb2813","eb2832","eb2833","eb2834","getFenderBallStrings","fender_info_5250_XL","fender_info_72505_M","fender_info_7250_L","fender_info_9050_M","fender5250","fender72505","fender7250","fender9050","Warwick","num","setNum","add","setAdd","scrollTo","child","listAll","listItems","payload","arrayData","getDownloadURL","imgSrc","getWarwickModels","models","bassModels","ddrio_strings","stringModels","dr_strings","ernie_ball_strings","fender_strings","maskNumber","Intl","NumberFormat","style","currency","format","name","description","neckType","topbackbody","fret","numfrets","equaliser","sgauge","color","Swal","fire","map","item","key","Ibanez","getIbanezModels","Epiphone","getEpiphoneModels","BassStrings","props","location","modelView","setModelView","modelImg","setModelImg","modelTitle","setModelTitle","modelInfo","setModelInfo","modelPrice","setModelPrice","obj","margin","pdf","GET_BASS_TABS","GET_BASS_TABS_LOCAL","PdfBassTabs","pdfjs","GlobalWorkerOptions","workerSrc","version","numPages","setNumPages","pageNumber","setPageNumber","catalog","setCatalog","tabs","getPdf","file","getBassTabs","returnBassTabs","band","onLoadSuccess","total","forEach","i","grandTotal","scope","k","filter","Footer","App","PrivateRoute","component","path","rest","Cart","rootReducer","combineReducers","action","local","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","generateStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9efebcca.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/storage';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCFWtxcTHoEEuyDvJVJVjfhQQ_s8ZX8T-M\",\r\n    authDomain: \"bass-store-react.firebaseapp.com\",\r\n    projectId: \"bass-store-react\",\r\n    storageBucket: \"bass-store-react.appspot.com\",\r\n    messagingSenderId: \"919066559770\",\r\n    appId: \"1:919066559770:web:07c65c3a0ba226813a18a3\",\r\n    measurementId: \"G-5ZTP9C5PP0\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const auth = firebase.auth();\r\n  const db = firebase.firestore();\r\n  const storage = firebase.storage();\r\n\r\n  export {firebase , auth, db, storage};","import { auth, firebase, db } from '../firebase';\r\n\r\n// init Data/Constants\r\nconst initData = {\r\n    loading: false,\r\n    active: false,\r\n    user: [],\r\n    cartSize: 0\r\n}\r\n// Type\r\nconst LOADING = 'LOADING';\r\nconst LOGIN_USER = 'LOGIN_USER';\r\nconst LOAD_SUCCESS_USER = 'LOAD_SUCCESS_USER';\r\nconst CLOSE_SESSION = 'CLOSE_SESSION';\r\nconst ADD_CART_ACTION_TO_LOCAL = 'ADD_CART_ACTION_TO_LOCAL';\r\n\r\n// Reducer\r\nexport default function userReducer(state = initData, action) {\r\n    switch (action.type) {\r\n        case LOADING:\r\n            return { ...state, loading: true };\r\n        case LOGIN_USER:\r\n            return { ...state, user: action.log, loading: false, active: true };\r\n        case LOAD_SUCCESS_USER:\r\n            return { ...state, user: action.local, active: true };\r\n        case CLOSE_SESSION:\r\n            return { ...initData };\r\n        case ADD_CART_ACTION_TO_LOCAL:\r\n            return { ...state, cartSize: action.items };\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\n// Actions\r\nexport const logUserAction = () => async (dispatch) => {\r\n    const date = new Date();\r\n    dispatch({\r\n        type: LOADING\r\n    });\r\n    try {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        const response = await auth.signInWithPopup(provider);\r\n        let user = {\r\n            uid: response.user.uid,\r\n            email: response.user.email,\r\n            displayName: response.user.displayName,\r\n            display: response.user.photoURL,\r\n            date: date,\r\n            cart: []\r\n        };\r\n        \r\n        await db.collection('users').doc(response.user.uid).get().then(ref => {\r\n            if (!ref.data()) {\r\n                console.log('registro firestore');\r\n                db.collection('users').doc(response.user.uid).set(user);\r\n            } else {\r\n                user = ref.data();\r\n            }\r\n        });\r\n        dispatch({\r\n            type: LOGIN_USER,\r\n            log: user\r\n        });\r\n        localStorage.setItem(response.user.uid, JSON.stringify(user));\r\n        localStorage.setItem('cart', JSON.stringify(user.cart));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const loggedUser = () => (dispatch) => {\r\n    auth.onAuthStateChanged(user => {\r\n        if (localStorage.getItem(user.uid)) {\r\n            dispatch({\r\n                type: LOAD_SUCCESS_USER,\r\n                local: JSON.parse(localStorage.getItem(user.uid))\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport const closeSession = () => (dispatch) => {\r\n    auth.onAuthStateChanged(user => {\r\n        localStorage.removeItem(user.uid);\r\n        localStorage.removeItem('cart');\r\n    });\r\n    auth.signOut();\r\n    dispatch({\r\n        type: CLOSE_SESSION\r\n    });\r\n}\r\n\r\nexport const addCart = (cart) => async (dispatch) => {\r\n    try {\r\n        auth.onAuthStateChanged(user => {\r\n            dispatch({\r\n                type: ADD_CART_ACTION_TO_LOCAL,\r\n                items: cart.length\r\n            });\r\n            console.log(cart);\r\n            db.collection('users').doc(user.uid).update({\r\n                cart: cart\r\n            });\r\n            localStorage.setItem('cart', JSON.stringify(cart));\r\n        });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/bass-logo-store.f7dfd6d1.png\";","import React from 'react';\r\n\r\nimport { Link, NavLink, withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logUserAction, closeSession } from '../redux/userDucks';\r\n\r\nimport '../styles/nav-style.css';\r\nimport logo from '../logo/bass-logo-store.png';\r\n\r\n\r\nconst Navbar = ({ cart }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const active = useSelector(store => store.googleUser.active);\r\n    const userDisplay = useSelector(store => store.googleUser.user.displayName);\r\n    const userImg = useSelector(store => store.googleUser.user.display);\r\n    \r\n    const logOut = () => {\r\n        dispatch(closeSession());\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light py-1 py-md-2 fixed-top navbar-shadow\" >\r\n                <Link className=\"navbar-brand\" to=\"/bass-store/\">\r\n                    <img className=\"logo-navbar\" src={logo} alt=\"\" />\r\n                </Link>\r\n                <button className=\"navbar-toggler\"\r\n                    type=\"button\" data-toggle=\"collapse\"\r\n                    data-target=\"#navbarNav\" aria-controls=\"navbarNav\"\r\n                    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse font-menu-navbar\" id=\"navbarNav\" >\r\n                    <div className=\"navbar-nav ml-auto \" >\r\n                        {\r\n                            active ? (\r\n                                <div className=\"d-flex justify-content-end mr-5\">\r\n                                    <ul className=\"navbar-nav\">\r\n                                        <li className=\"nav-item\">\r\n                                            <a className=\"nav-item nav-link mr-3\" href=\"#0\">\r\n                                                {userDisplay}\r\n                                                <img className=\"img-display ml-2\" src={userImg} alt=\"\" /></a>\r\n\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <NavLink className=\"nav-item nav-link mr-3\" to=\"/usercart\" exact>\r\n                                                My cart\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"ml-2 bi bi-cart4\" viewBox=\"0 1.5 16 16\">\r\n                                                    <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                                </svg>\r\n                                                {\r\n                                                    cart.length !== 0 ? (\r\n                                                        <span className=\"noti-icon-badge\">{cart.length}</span>\r\n                                                    ) : null\r\n                                                }\r\n                                            </NavLink>\r\n                                        </li>\r\n                                        <li className=\"nav-item\">\r\n                                            <NavLink onClick={() => logOut()}\r\n                                                className=\"nav-item nav-link mr-3\" to=\"/bass-store/\" exact>Close Session</NavLink>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            ) : (\r\n                                    <div className=\"d-flex justify-content-end margin-menu-navbar\">\r\n                                        <button className=\"btn btn-dark log-in-button\"\r\n                                            type=\"button\"\r\n                                            onClick={() => dispatch(logUserAction())}>Login</button>\r\n                                    </div>\r\n                                )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default withRouter(Navbar);\r\n","import React, { useState, useEffect }  from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar';\r\nimport '../styles/index-style.css';\r\n\r\nconst Index = () => {\r\n\r\n    const [cart, setCart] = useState([]);\r\n\r\n    useEffect(() => {localStorage.getItem('cart') && (setCart([...JSON.parse(localStorage.getItem('cart'))]));},[]);\r\n\r\n    const bassStrings = { img: '', title: '', info: '', price: 0 };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar cart={cart}/>\r\n            <div className=\"container mt-5 font-oswald\" >\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"text-center mb-3\">\r\n                        <NavLink to=\"/warwick\">\r\n                            <img src=\"img\\bass-warwick.png\" alt=\"\" className=\"widthBass\" />\r\n                        </NavLink>\r\n                        <h3 className=\"mt-3\">Warwick</h3>\r\n                    </div>\r\n                    <div className=\"text-center mb-3\">\r\n                        <NavLink to=\"/ibanez\">\r\n                            <img src=\"img\\bass-ibanez.png\" alt=\"\" className=\"widthBass\" />\r\n                        </NavLink>\r\n                        <h3 className=\"mt-3\">Ibañez</h3>\r\n                    </div>\r\n                    <div className=\"text-center mb-3\">\r\n                        <NavLink to=\"/epiphone\">\r\n                            <img src=\"img\\bass-epiphone.png\" alt=\"\" className=\"widthBass\" />\r\n                        </NavLink>\r\n                        <h3 className=\"mt-3\">Epiphone</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"mt-5\">\r\n                        <NavLink to={{ pathname: \"/strings\", state: { view: false, stringbass: bassStrings } }}>\r\n                            <img className=\"img-fluid widthBanner\" src=\"img\\bass-strings-banner.png\" alt=\"\" />\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className=\"mt-5\">\r\n                        <NavLink to=\"/basstabs\">\r\n                            <img className=\"img-fluid widthBanner\" src=\"img\\bass-tabs-banner.png\" alt=\"\" />\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center mt-5 mb-5\">\r\n                    <NavLink type=\"button\"\r\n                        className=\"btn btn-outline-dark btn-lg buttonMetronomeLink\"\r\n                        to=\"/metronome\">Try our metronome</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Index;\r\n","export default __webpack_public_path__ + \"static/media/Korg-N1R-Metronome-Click.455044e8.wav\";","import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Navbar from '../components/Navbar';\r\nimport '../styles/metronome-style.css';\r\nimport korg from '../sound/Korg-N1R-Metronome-Click.wav';\r\n\r\nconst Metronome = () => {\r\n\r\n    const [cart, setCart] = useState([]);\r\n\r\n    const [seconds, setSeconds] = useState(1);\r\n    const [play, setPlay] = useState(false);\r\n    const [click] = useState(new Audio());\r\n    const [sliderValue, setSliderValue] = useState(100);\r\n\r\n    const result = 60000 / sliderValue;\r\n\r\n    const stopMetro = () => {\r\n        setPlay(false);\r\n        setSeconds(1);\r\n    };\r\n\r\n    click.src = korg;\r\n\r\n    useEffect(() => {\r\n        localStorage.getItem('cart') && (setCart([...JSON.parse(localStorage.getItem('cart'))]));\r\n        if (play) {\r\n            const id = window.setInterval(() => {\r\n                setSeconds(seconds => seconds + 1);\r\n                click.play();\r\n            }, result);\r\n            return () => window.clearInterval(id);\r\n        }\r\n        return undefined;\r\n    }, [play, click, result]);\r\n\r\n    seconds === 5 && setSeconds(1);\r\n\r\n    const plusSlider = () => {\r\n        const moreThan = (sliderValue >= 200) ? true : false;\r\n        if (!moreThan) {\r\n            setSliderValue(parseInt(sliderValue) + 1);\r\n        }\r\n    }\r\n\r\n    const lessSlider = () => {\r\n        const lessthan = (sliderValue <= 0) ? true : false;\r\n        if (!lessthan) {\r\n            setSliderValue(parseInt(sliderValue) - 1);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar cart={cart} />\r\n            <div className=\"cointainer mt-3 container-padding p-5 mb-5\">\r\n                <div className=\"row justify-content-md-center\">\r\n                    <div className=\"col-md-auto\">\r\n                        <h1 className=\"mt-5 centerText\">Metronome 4/4</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-md-center mt-3\">\r\n                    <div className=\"circle col-md-auto\">\r\n                        <div className=\"circle-two col-md-auto\">\r\n                            <h1 className=\"mt-2 centerText\">{seconds}</h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-md-center mt-4\">\r\n                    <div className=\"col-md-auto centerText\">\r\n                        <table>\r\n                            <thead className=\"centerText\">\r\n                                <tr>\r\n                                    {\r\n                                        seconds === 1 ? (<th><svg className=\"mr-4 ml-4\" width=\"16\" height=\"16\" fill=\"brown\">\r\n                                            <circle cx=\"8\" cy=\"8\" r=\"8\" />\r\n                                        </svg></th>) : (<th><svg className=\"mr-4 ml-4\" width=\"16\" height=\"16\" fill=\"gainsboro\">\r\n                                            <circle cx=\"8\" cy=\"8\" r=\"8\" />\r\n                                        </svg></th>)\r\n                                    }\r\n                                    {\r\n                                        seconds === 2 ? (<th><svg className=\"mr-4 ml-4\" width=\"16\" height=\"16\" fill=\"darkcyan\">\r\n                                            <circle cx=\"8\" cy=\"8\" r=\"8\" />\r\n                                        </svg></th>) : (<th><svg className=\"mr-4 ml-4\" width=\"16\" height=\"16\" fill=\"gainsboro\">\r\n                                            <circle cx=\"8\" cy=\"8\" r=\"8\" />\r\n                                        </svg></th>)\r\n                                    }\r\n                                    {\r\n                                        seconds === 3 ? (<th><svg className=\"mr-4 ml-4\" width=\"16\" height=\"16\" fill=\"darkcyan\">\r\n                                            <circle cx=\"8\" cy=\"8\" r=\"8\" />\r\n                                        </svg></th>) : (<th><svg className=\"mr-4 ml-4\" width=\"16\" height=\"16\" fill=\"gainsboro\">\r\n                                            <circle cx=\"8\" cy=\"8\" r=\"8\" />\r\n                                        </svg></th>)\r\n                                    }\r\n                                    {\r\n                                        seconds === 4 ? (<th><svg className=\"mr-4 ml-4\" width=\"16\" height=\"16\" fill=\"darkcyan\">\r\n                                            <circle cx=\"8\" cy=\"8\" r=\"8\" />\r\n                                        </svg></th>) : (<th><svg className=\"mr-4 ml-4\" width=\"16\" height=\"16\" fill=\"gainsboro\">\r\n                                            <circle cx=\"8\" cy=\"8\" r=\"8\" />\r\n                                        </svg></th>)\r\n                                    }\r\n                                </tr>\r\n                            </thead>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-5\">\r\n                    <div className=\"row justify-content-center\">\r\n                        <button\r\n                            className=\"btn btn-outline-info mr-3 buttonMetronome\"\r\n                            onClick={() => setPlay(true)}>play</button>\r\n                        <button\r\n                            className=\"btn btn-outline-danger buttonMetronome\"\r\n                            onClick={() => stopMetro()}>stop</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-md-center mt-5\">\r\n                        <div className=\"col-md-auto slideBarWith\">\r\n                            <input type=\"range\" className=\"form-control-range\" min=\"0\" max=\"200\"\r\n                                value={sliderValue} onChange={e => setSliderValue(e.target.value)}></input>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-4 centerText\">\r\n                    <div className=\"col-sm\" />\r\n                    <div className=\"col-sm\" />\r\n                    <div className=\"col-sm\">\r\n                        <button\r\n                            className=\"btn btn-secondary buttonBpm\"\r\n                            onClick={() => lessSlider()}><h4>-</h4></button>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <h3 className=\"centerText\">{sliderValue} BPM</h3>\r\n                    </div>\r\n                    <div className=\"col-sm\">\r\n                        <button\r\n                            className=\"btn btn-secondary buttonBpm\"\r\n                            onClick={() => plusSlider()}><h4>+</h4></button>\r\n                    </div>\r\n                    <div className=\"col-sm\" />\r\n                    <div className=\"col-sm\" />\r\n                </div>\r\n                <div className=\"row justify-content-center mt-5 mb-5\">\r\n                    <NavLink type=\"button\"\r\n                        className=\"btn btn-outline-dark btn-lg buttonMetronomeLink\"\r\n                        to=\"/bass-store/\">Return to home</NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Metronome;\r\n","import { storage, db } from '../firebase';\r\n\r\n// Constants\r\nconst WARWICK_FOLDER = 'warwick';\r\nconst IBANEZ_FOLDER = 'ibanez';\r\nconst EPIPHONE_FOLDER = 'epiphone';\r\n\r\nconst initData = {\r\n    loading: false,\r\n    resutls: [],\r\n    list: 0,\r\n    model: []\r\n}\r\n\r\n// Types\r\nconst LOADING = 'LOADING';\r\nconst GET_WARWICK_MODELS = 'GET_WARWICK_MODELS';\r\nconst GET_WARWICK_MODELS_LOCAL = 'GET_WARWICK_MODELS_LOCAL';\r\nconst GET_IBANEZ_MODELS = 'GET_IBANEZ_MODELS';\r\nconst GET_IBANEZ_MODELS_LOCAL = 'GET_IBANEZ_MODELS_LOCAL';\r\nconst GET_EPIPHONE_MODELS = 'GET_EPIPHONE_MODELS';\r\nconst GET_EPIPHONE_MODELS_LOCAL = 'GET_EPIPHONE_MODELS_LOCAL';\r\n\r\n// Reducer\r\nexport default function modelReducer(state = initData, action) {\r\n    switch (action.type) {\r\n        case LOADING:\r\n            return { ...state, loading: action.loading };\r\n        case GET_WARWICK_MODELS:\r\n            return {\r\n                ...state, resutls: action.payload, list: action.list,\r\n                loading: action.loading, model: action.model\r\n            };\r\n        case GET_WARWICK_MODELS_LOCAL:\r\n            return { ...state, resutls: action.payload, list: action.list, model: action.model, loading:false };\r\n        case GET_IBANEZ_MODELS:\r\n            return {\r\n                ...state, resutls: action.payload, list: action.list,\r\n                loading: action.loading, model: action.model\r\n            };\r\n        case GET_IBANEZ_MODELS_LOCAL:\r\n            return { ...state, resutls: action.payload, list: action.list, model: action.model, loading:false };\r\n        case GET_EPIPHONE_MODELS:\r\n            return {\r\n                ...state, resutls: action.payload, list: action.list,\r\n                loading: action.loading, model: action.model\r\n            };\r\n        case GET_EPIPHONE_MODELS_LOCAL:\r\n            return { ...state, resutls: action.payload, list: action.list, model: action.model, loading:false };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n// Actions\r\n\r\n// WARWICK\r\nexport const getWarwickModels = (num) => async (dispatch) => {\r\n    const listItems = await storage.ref().child(WARWICK_FOLDER).listAll();\r\n    if (localStorage.getItem(`w-edited-${num}.png`) && localStorage.getItem(`w-model-${num}`)) {\r\n        // consuming from localstorage \r\n        dispatch({\r\n            type: GET_WARWICK_MODELS_LOCAL,\r\n            payload: JSON.parse(localStorage.getItem(`w-edited-${num}.png`)),\r\n            list: listItems.items.length,\r\n            model: JSON.parse(localStorage.getItem(`w-model-${num}`))\r\n        })\r\n        return\r\n    }\r\n    try {\r\n        // consuming from firestore storage\r\n        dispatch({\r\n            type: LOADING,\r\n            loading: true\r\n        })\r\n        const info = await db.collection(WARWICK_FOLDER).doc(`w-model-${num}`).get();\r\n        const arrayData = info.data();\r\n        if (num <= listItems.items.length) {\r\n            const imgSrc = await storage.ref().child(WARWICK_FOLDER).child(`w-edited-${num}.png`).getDownloadURL();\r\n            dispatch({\r\n                type: GET_WARWICK_MODELS,\r\n                payload: imgSrc,\r\n                list: listItems.items.length,\r\n                loading: false,\r\n                model: arrayData\r\n            })\r\n            localStorage.setItem(`w-edited-${num}.png`, JSON.stringify(imgSrc));\r\n            localStorage.setItem(`w-model-${num}`, JSON.stringify(arrayData));\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n// IBANEZ\r\nexport const getIbanezModels = (num) => async (dispatch) => {\r\n    const listItems = await storage.ref().child(IBANEZ_FOLDER).listAll();\r\n    if (localStorage.getItem(`i-edited-${num}.jpg`) && localStorage.getItem(`i-model-${num}`)) {\r\n        // consuming from localstorage \r\n        dispatch({\r\n            type: GET_IBANEZ_MODELS_LOCAL,\r\n            payload: JSON.parse(localStorage.getItem(`i-edited-${num}.jpg`)),\r\n            list: listItems.items.length,\r\n            model: JSON.parse(localStorage.getItem(`i-model-${num}`))\r\n        })\r\n        return\r\n    }\r\n    try {\r\n        // consuming from firestore storage\r\n        dispatch({\r\n            type: LOADING,\r\n            loading: true\r\n        })\r\n        if (num <= listItems.items.length) {\r\n            const imgSrc = await storage.ref().child(IBANEZ_FOLDER).child(`i-edited-${num}.jpg`).getDownloadURL();\r\n            const info = await db.collection(IBANEZ_FOLDER).doc(`i-model-${num}`).get();\r\n            const arrayData = info.data();\r\n            dispatch({\r\n                type: GET_IBANEZ_MODELS,\r\n                payload: imgSrc,\r\n                list: listItems.items.length,\r\n                loading: false,\r\n                model: arrayData\r\n            })\r\n            localStorage.setItem(`i-edited-${num}.jpg`, JSON.stringify(imgSrc));\r\n            localStorage.setItem(`i-model-${num}`, JSON.stringify(arrayData));\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n// EPIPHONE\r\nexport const getEpiphoneModels = (num) => async (dispatch) => {\r\n    const listItems = await storage.ref().child(EPIPHONE_FOLDER).listAll();\r\n    if (localStorage.getItem(`e-edited-${num}.png`) && localStorage.getItem(`e-model`)) {\r\n        // consuming from localstorage \r\n        dispatch({\r\n            type: GET_EPIPHONE_MODELS_LOCAL,\r\n            payload: JSON.parse(localStorage.getItem(`e-edited-${num}.png`)),\r\n            list: listItems.items.length,\r\n            model: JSON.parse(localStorage.getItem(`e-model`))\r\n        })\r\n        return\r\n    }\r\n    try {\r\n        // consuming from firestore storage\r\n        dispatch({\r\n            type: LOADING,\r\n            loading: true\r\n        })\r\n        if (num <= listItems.items.length) {\r\n            const imgSrc = await storage.ref().child(EPIPHONE_FOLDER).child(`e-edited-${num}.png`).getDownloadURL();\r\n            const info = await db.collection(EPIPHONE_FOLDER).doc(`e-model`).get();\r\n            const arrayData = info.data();\r\n            dispatch({\r\n                type: GET_EPIPHONE_MODELS,\r\n                payload: imgSrc,\r\n                list: listItems.items.length,\r\n                loading: false,\r\n                model: arrayData\r\n            })\r\n            localStorage.setItem(`e-edited-${num}.png`, JSON.stringify(imgSrc));\r\n            localStorage.setItem(`e-model`, JSON.stringify(arrayData));\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import { db } from '../firebase';\r\n\r\n// Constants\r\nconst DDRIO_FOLDER = 'daddario';\r\nconst DR_FOLDER = 'dr';\r\nconst ERNIE_BALL_FOLDER = 'ernieball';\r\nconst FENDER_FOLDER = 'fender';\r\nconst EXL160 = 'EXL160';\r\nconst EXL165 = 'EXL165';\r\nconst EXL170 = 'EXL170';\r\nconst EXL230 = 'EXL230';\r\nconst DR_BLACK_BEAUTIES = 'black-beauties';\r\nconst DR_HI_BEAM_XL = 'hi-beam-xl';\r\nconst DR_HI_BEAM_MEDIUM = 'hi-beam-medium';\r\nconst DR_LO_RIDER = 'lo-rider';\r\nconst ERNIE_BALL_2813 = '2813';\r\nconst ERNIE_BALL_2832 = '2832';\r\nconst ERNIE_BALL_2833 = '2833';\r\nconst ERNIE_BALL_2834 = '2834';\r\nconst FENDER_5250_XL = '5250XL';\r\nconst FENDER_72505_M = '72505M';\r\nconst FENDER_7250_L = '7250L';\r\nconst FENDER_9050_M = '9050M';\r\n\r\nconst initData = {\r\n    loading: false,\r\n    ddrio: [],\r\n    dr: [],\r\n    ernie: [],\r\n    fender: []\r\n}\r\n\r\n// Types\r\nconst LOADING = 'LOADING';\r\nconst GET_DADDARIO_MODELS = 'GET_DADDARIO_MODELS';\r\nconst GET_DR_MODELS = 'GET_DR_MODELS';\r\nconst GET_ERNIE_BALL_MODELS = 'GET_ERNIE_BALL_MODELS';\r\nconst GET_FENDER_MODELS = 'GET_FENDER_MODELS';\r\nconst GET_DADDARIO_MODELS_LOCAL = 'GET_DADDARIO_MODELS_LOCAL';\r\nconst GET_DR_MODELS_LOCAL = 'GET_DR_MODELS_LOCAL';\r\nconst GET_ERNIE_BALL_MODELS_LOCAL = 'GET_ERNIE_BALL_MODELS_LOCAL';\r\nconst GET_FENDER_MODELS_LOCAL = 'GET_FENDER_MODELS_LOCAL';\r\n\r\n// Reducer\r\nexport default function bassStrReducer(state = initData, action) {\r\n    switch (action.type) {\r\n        case LOADING:\r\n            return { ...state, loading: action.loading };\r\n        case GET_DADDARIO_MODELS:\r\n            return { ...state, ddrio: action.response, loading: action.loading };\r\n        case GET_DADDARIO_MODELS_LOCAL:\r\n            return { ...state, ddrio: action.response, loading: false };\r\n        case GET_DR_MODELS:\r\n            return { ...state, dr: action.response, loading: action.loading };\r\n        case GET_DR_MODELS_LOCAL:\r\n            return { ...state, dr: action.response, loading: false };\r\n        case GET_ERNIE_BALL_MODELS:\r\n            return { ...state, ernie: action.response, loading: action.loading };\r\n        case GET_ERNIE_BALL_MODELS_LOCAL:\r\n            return { ...state, ernie: action.response, loading: false };\r\n        case GET_FENDER_MODELS:\r\n            return { ...state, fender: action.response, loading: action.loading };\r\n        case GET_FENDER_MODELS_LOCAL:\r\n            return { ...state, fender: action.response, loading: false };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Actions\r\nexport const getDaddarioStrings = () => async (dispatch) => {\r\n    if (localStorage.getItem('daddario_info')) {\r\n        dispatch({\r\n            type: GET_DADDARIO_MODELS_LOCAL,\r\n            response: JSON.parse(localStorage.getItem('daddario_info'))\r\n        })\r\n        return\r\n    }\r\n    try {\r\n        dispatch({\r\n            type: LOADING,\r\n            loading: true\r\n        })\r\n        const ddrio_info_160 = await db.collection(DDRIO_FOLDER).doc(EXL160).get();\r\n        const ddrio_info_165 = await db.collection(DDRIO_FOLDER).doc(EXL165).get();\r\n        const ddrio_info_170 = await db.collection(DDRIO_FOLDER).doc(EXL170).get();\r\n        const ddrio_info_230 = await db.collection(DDRIO_FOLDER).doc(EXL230).get();\r\n        const data = [\r\n            {\r\n                exl160: ddrio_info_160.data(),\r\n                exl165: ddrio_info_165.data(),\r\n                exl170: ddrio_info_170.data(),\r\n                exl230: ddrio_info_230.data()\r\n            }\r\n        ];\r\n        dispatch({\r\n            type: GET_DADDARIO_MODELS,\r\n            loading: false,\r\n            response: data\r\n        })\r\n        localStorage.setItem('daddario_info', JSON.stringify(data));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const getDRStrings = () => async (dispatch) => {\r\n    if (localStorage.getItem('dr_info')) {\r\n        dispatch({\r\n            type: GET_DR_MODELS_LOCAL,\r\n            response: JSON.parse(localStorage.getItem('dr_info'))\r\n        })\r\n        return\r\n    }\r\n    try {\r\n        dispatch({\r\n            type: LOADING,\r\n            loading: true\r\n        })\r\n        const dr_info_black_b = await db.collection(DR_FOLDER).doc(DR_BLACK_BEAUTIES).get();\r\n        const dr_info_hi_beam_m = await db.collection(DR_FOLDER).doc(DR_HI_BEAM_MEDIUM).get();\r\n        const dr_info_hi_beam_xl = await db.collection(DR_FOLDER).doc(DR_HI_BEAM_XL).get();\r\n        const dr_info_lo_rider = await db.collection(DR_FOLDER).doc(DR_LO_RIDER).get();\r\n        const data = [\r\n            {\r\n                drblackb: dr_info_black_b.data(),\r\n                drhibeamm: dr_info_hi_beam_m.data(),\r\n                drhibeamxl: dr_info_hi_beam_xl.data(),\r\n                drlorider: dr_info_lo_rider.data()\r\n            }\r\n        ];\r\n        dispatch({\r\n            type: GET_DR_MODELS,\r\n            loading: false,\r\n            response: data\r\n        })\r\n        localStorage.setItem('dr_info', JSON.stringify(data));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const getErnieBallStrings = () => async (dispatch) => {\r\n    if (localStorage.getItem('ernie_ball_info')) {\r\n        dispatch({\r\n            type: GET_ERNIE_BALL_MODELS_LOCAL,\r\n            response: JSON.parse(localStorage.getItem('ernie_ball_info'))\r\n        })\r\n        return\r\n    }\r\n    try {\r\n        dispatch({\r\n            type: LOADING,\r\n            loading: true\r\n        })\r\n        const ernie_ball_info_2813 = await db.collection(ERNIE_BALL_FOLDER).doc(ERNIE_BALL_2813).get();\r\n        const ernie_ball_info_2832 = await db.collection(ERNIE_BALL_FOLDER).doc(ERNIE_BALL_2832).get();\r\n        const ernie_ball_info_2833 = await db.collection(ERNIE_BALL_FOLDER).doc(ERNIE_BALL_2833).get();\r\n        const ernie_ball_info_2834 = await db.collection(ERNIE_BALL_FOLDER).doc(ERNIE_BALL_2834).get();\r\n        const data = [\r\n            {\r\n                eb2813: ernie_ball_info_2813.data(),\r\n                eb2832: ernie_ball_info_2832.data(),\r\n                eb2833: ernie_ball_info_2833.data(),\r\n                eb2834: ernie_ball_info_2834.data()\r\n            }\r\n        ];\r\n        dispatch({\r\n            type: GET_ERNIE_BALL_MODELS,\r\n            loading: false,\r\n            response: data\r\n        })\r\n        localStorage.setItem('ernie_ball_info', JSON.stringify(data));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const getFenderBallStrings = () => async (dispatch) => {\r\n    if (localStorage.getItem('fender_info')) {\r\n        dispatch({\r\n            type: GET_FENDER_MODELS_LOCAL,\r\n            response: JSON.parse(localStorage.getItem('fender_info'))\r\n        })\r\n        return\r\n    }\r\n    try {\r\n        dispatch({\r\n            type: LOADING,\r\n            loading: true\r\n        })\r\n        const fender_info_5250_XL = await db.collection(FENDER_FOLDER).doc(FENDER_5250_XL).get();\r\n        const fender_info_72505_M = await db.collection(FENDER_FOLDER).doc(FENDER_72505_M).get();\r\n        const fender_info_7250_L = await db.collection(FENDER_FOLDER).doc(FENDER_7250_L).get();\r\n        const fender_info_9050_M = await db.collection(FENDER_FOLDER).doc(FENDER_9050_M).get();\r\n        const data = [\r\n            {\r\n                fender5250: fender_info_5250_XL.data(),\r\n                fender72505: fender_info_72505_M.data(),\r\n                fender7250: fender_info_7250_L.data(),\r\n                fender9050: fender_info_9050_M.data()\r\n            }\r\n        ];\r\n        dispatch({\r\n            type: GET_FENDER_MODELS,\r\n            loading: false,\r\n            response: data\r\n        })\r\n        localStorage.setItem('fender_info', JSON.stringify(data));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getWarwickModels } from '../redux/bassModelsDucks';\r\nimport { getDaddarioStrings, getDRStrings, getErnieBallStrings, getFenderBallStrings } from '../redux/stringsDucks';\r\nimport { addCart } from '../redux/userDucks';\r\nimport Navbar from '../components/Navbar';\r\nimport '../styles/bassmodels-style.css';\r\nimport '../styles/loading-animation.css';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Warwick = () => {\r\n\r\n    const [num, setNum] = useState(1);\r\n    const [cart, setCart] = useState([]);\r\n    const [add, setAdd] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        localStorage.getItem('cart') && (setCart([...JSON.parse(localStorage.getItem('cart'))]));\r\n        const getWarwickRedux = () => {\r\n            dispatch(getWarwickModels(num));\r\n        };\r\n        const getBassStringsRedux = () => {\r\n            dispatch(getDaddarioStrings());\r\n            dispatch(getDRStrings());\r\n            dispatch(getErnieBallStrings());\r\n            dispatch(getFenderBallStrings());\r\n        };\r\n        getBassStringsRedux();\r\n        getWarwickRedux();\r\n    }, [num, dispatch]);\r\n\r\n    const models = useSelector(store => store.bassModels.resutls);\r\n    const list = useSelector(store => store.bassModels.list);\r\n    const loading = useSelector(store => store.bassModels.loading);\r\n    const model = useSelector(store => store.bassModels.model);\r\n    const ddrio_strings = useSelector(store => store.stringModels.ddrio);\r\n    const dr_strings = useSelector(store => store.stringModels.dr);\r\n    const ernie_ball_strings = useSelector(store => store.stringModels.ernie);\r\n    const fender_strings = useSelector(store => store.stringModels.fender);\r\n    const active = useSelector(store => store.googleUser.active);\r\n\r\n    add && (dispatch(addCart(cart)));\r\n\r\n    const maskNumber = (price) => {\r\n        const options = { style: 'currency', currency: 'USD' };\r\n        const numberFormat = new Intl.NumberFormat('en-US', options);\r\n        return numberFormat.format(price);\r\n    };\r\n\r\n    return models ? (\r\n        <div>\r\n            <Navbar cart={cart} />\r\n            <div className=\"text-center\">\r\n                <div className=\"backgroundBassModeltitle\">\r\n                    <h1 className=\"\">Warwick Bass Guitars</h1>\r\n                </div>\r\n                {\r\n                    !loading ? (\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <img className=\"img-fluid\" src={models} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"row justify-content-center mt-3\">\r\n                                <div className=\"col-sm\">\r\n                                    {\r\n                                        num !== 1 && (\r\n                                            <button\r\n                                                className=\"btn btn-dark buttonImg mr-2\"\r\n                                                onClick={() => setNum(num - 1)}>Previous</button>\r\n                                        )\r\n                                    }\r\n                                    {\r\n                                        num !== list && (\r\n                                            <button\r\n                                                className=\"btn btn-dark buttonImg mr-2\"\r\n                                                onClick={() => setNum(num + 1)}>Next</button>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container mt-4\">\r\n                                <h3>{model.name}</h3>\r\n                                <hr />\r\n                                <div className=\"col-sm\">\r\n                                    <blockquote className=\"blockquote\">\r\n                                        <p className=\"font-italic\">{model.description}</p>\r\n                                    </blockquote>\r\n                                </div>\r\n                                <div className=\"row justify-content-center text-left mt-3\">\r\n                                    <div className=\"col-sm\">\r\n                                        <table className=\"table table-sm\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <th>neck type</th>\r\n                                                    <td>{model.neckType}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>top/back/body</th>\r\n                                                    <td>{model.topbackbody}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>fret</th>\r\n                                                    <td>{model.fret}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>number of frets</th>\r\n                                                    <td>{model.numfrets}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>EQ</th>\r\n                                                    <td>{model.equaliser}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>string gauge</th>\r\n                                                    <td>{model.sgauge}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>hardware color</th>\r\n                                                    <td>{model.color}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div className=\"col-sm text-center\">\r\n                                        <div className=\"p-4 mb-2 bg-light text-dark border\">\r\n                                            <h3>Price: <strong>{maskNumber(model.price)}</strong></h3>\r\n                                            <button className=\"mt-3 mb-2 btn btn-warning btn-lg\"\r\n                                                onClick={() => {\r\n                                                    if (active) {\r\n                                                        setCart([...cart, { name: model.name, price: model.price, img: models }]);\r\n                                                        setAdd(true);\r\n                                                    } else {\r\n                                                        Swal.fire('Sign in to add items!');\r\n                                                    }\r\n                                                }}><strong>Add to cart</strong>\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                                    <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                                </svg>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            <h2>Bass Guitar Strings</h2>\r\n                            <div className=\"row justify-content-center\">\r\n                                {\r\n                                    ddrio_strings.map(item => (\r\n                                        <div className=\"col p-5\" key={item.exl160}>\r\n                                            <NavLink to={{ pathname: \"/strings\", state: { view: true, stringbass: item.exl160 } }}>\r\n                                                <img className=\"imgStrings\" src={item.exl160.img} alt=\"\" />\r\n                                            </NavLink>\r\n                                            <h4 className=\"mt-2\">{maskNumber(item.exl160.price)}</h4>\r\n                                            <button className=\"btn btn-warning\"\r\n                                                onClick={() => {\r\n                                                    if (active) {\r\n                                                        setCart([...cart, {\r\n                                                            name: item.exl160.title, price: item.exl160.price, img: item.exl160.img\r\n                                                        }]);\r\n                                                        setAdd(true);\r\n                                                    } else {\r\n                                                        Swal.fire('Sign in to add items!');\r\n                                                    }\r\n                                                }}>Add to Cart</button>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                {\r\n                                    dr_strings.map(item => (\r\n                                        <div className=\"col p-5\" key={item.drblackb}>\r\n                                            <NavLink to={{ pathname: \"/strings\", state: { view: true, stringbass: item.drblackb } }}>\r\n                                                <img className=\"imgStrings\" src={item.drblackb.img} alt=\"\" />\r\n                                            </NavLink>\r\n                                            <h4 className=\"mt-2\">{maskNumber(item.drblackb.price)}</h4>\r\n                                            <button className=\"btn btn-warning\"\r\n                                                onClick={() => {\r\n                                                    if (active) {\r\n                                                        setCart([...cart, {\r\n                                                            name: item.drblackb.title, price: item.drblackb.price, img: item.drblackb.img\r\n                                                        }]);\r\n                                                        setAdd(true);\r\n                                                    } else {\r\n                                                        Swal.fire('Sign in to add items!');\r\n                                                    }\r\n                                                }}>Add to Cart</button>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                {\r\n                                    ernie_ball_strings.map(item => (\r\n                                        <div className=\"col p-5\" key={item.eb2813}>\r\n                                            <NavLink to={{ pathname: \"/strings\", state: { view: true, stringbass: item.eb2813 } }}>\r\n                                                <img className=\"imgStrings\" src={item.eb2813.img} alt=\"\" />\r\n                                            </NavLink>\r\n                                            <h4 className=\"mt-2\">{maskNumber(item.eb2813.price)}</h4>\r\n                                            <button className=\"btn btn-warning\"\r\n                                                onClick={() => {\r\n                                                    if (active) {\r\n                                                        setCart([...cart, {\r\n                                                            name: item.eb2813.title, price: item.eb2813.price, img: item.eb2813.img\r\n                                                        }]);\r\n                                                        setAdd(true);\r\n                                                    } else {\r\n                                                        Swal.fire('Sign in to add items!');\r\n                                                    }\r\n                                                }}>Add to Cart</button>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                {\r\n                                    fender_strings.map(item => (\r\n                                        <div className=\"col p-5\" key={item.fender5250}>\r\n                                            <NavLink to={{ pathname: \"/strings\", state: { view: true, stringbass: item.fender5250 } }}>\r\n                                                <img className=\"imgStrings\" src={item.fender5250.img} alt=\"\" />\r\n                                            </NavLink>\r\n                                            <h4 className=\"mt-2\">{maskNumber(item.fender5250.price)}</h4>\r\n                                            <button className=\"btn btn-warning\"\r\n                                                onClick={() => {\r\n                                                    if (active) {\r\n                                                        setCart([...cart, {\r\n                                                            name: item.fender5250.title, price: item.fender5250.price, img: item.fender5250.img\r\n                                                        }]);\r\n                                                        setAdd(true);\r\n                                                    } else {\r\n                                                        Swal.fire('Sign in to add items!');\r\n                                                    }\r\n                                                }}>Add to Cart</button>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"mt-5 mb-5\">\r\n                                <NavLink to=\"/bass-store/\">\r\n                                    <button type=\"button\" className=\"btn btn-light border buttonImg mr-2\" >Home</button>\r\n                                </NavLink>\r\n                                <NavLink to=\"/ibanez\">\r\n                                    <button type=\"button\" className=\"btn btn-light border buttonImg mr-2\">Ibañez</button>\r\n                                </NavLink>\r\n                                <NavLink to=\"/epiphone\">\r\n                                    <button type=\"button\" className=\"btn btn-light border buttonImg mr-2\" >Epiphone</button>\r\n                                </NavLink>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                            <div className=\"spinner\">\r\n                                <div className=\"bounce1\"></div>\r\n                                <div className=\"bounce2\"></div>\r\n                                <div className=\"bounce3\"></div>\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n        </div>\r\n    ) : null\r\n};\r\n\r\nexport default Warwick;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getIbanezModels } from '../redux/bassModelsDucks';\r\nimport { getDaddarioStrings, getDRStrings, getErnieBallStrings, getFenderBallStrings } from '../redux/stringsDucks';\r\nimport { addCart } from '../redux/userDucks';\r\nimport Navbar from '../components/Navbar';\r\nimport '../styles/bassmodels-style.css';\r\nimport '../styles/loading-animation.css';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Ibanez = () => {\r\n\r\n    const [num, setNum] = useState(1);\r\n    const [cart, setCart] = useState([]);\r\n    const [add, setAdd] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        localStorage.getItem('cart') && (setCart([...JSON.parse(localStorage.getItem('cart'))]));\r\n        const getIbanezRedux = () => {\r\n            dispatch(getIbanezModels(num));\r\n        };\r\n        const getBassStringsRedux = () => {\r\n            dispatch(getDaddarioStrings());\r\n            dispatch(getDRStrings());\r\n            dispatch(getErnieBallStrings());\r\n            dispatch(getFenderBallStrings());\r\n        };\r\n        getBassStringsRedux();\r\n        getIbanezRedux();\r\n    }, [num, dispatch]);\r\n\r\n    const models = useSelector(store => store.bassModels.resutls);\r\n    const list = useSelector(store => store.bassModels.list);\r\n    const loading = useSelector(store => store.bassModels.loading);\r\n    const model = useSelector(store => store.bassModels.model);\r\n    const ddrio_strings = useSelector(store => store.stringModels.ddrio);\r\n    const dr_strings = useSelector(store => store.stringModels.dr);\r\n    const ernie_ball_strings = useSelector(store => store.stringModels.ernie);\r\n    const fender_strings = useSelector(store => store.stringModels.fender);\r\n    const active = useSelector(store => store.googleUser.active);\r\n\r\n    add && (dispatch(addCart(cart)));\r\n\r\n    const maskNumber = (price) => {\r\n        const options = { style: 'currency', currency: 'USD' };\r\n        const numberFormat = new Intl.NumberFormat('en-US', options);\r\n        return numberFormat.format(price);\r\n    };\r\n\r\n    return models ? (\r\n        <div>\r\n            <Navbar cart={cart} />\r\n            <div className=\"text-center\">\r\n                <div className=\"backgroundBassModeltitle\">\r\n                    <h1 className=\"\">Ibañez Bass Guitars</h1>\r\n                </div>\r\n                {\r\n                    !loading ? (\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <img className=\"img-fluid\" src={models} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"row justify-content-center mt-3\">\r\n                                <div className=\"col-sm\">\r\n                                    {\r\n                                        num !== 1 && (\r\n                                            <button\r\n                                                className=\"btn btn-dark buttonImg mr-4\"\r\n                                                onClick={() => setNum(num - 1)}>Previous</button>\r\n                                        )\r\n                                    }\r\n\r\n                                    {\r\n                                        num !== list && (\r\n                                            <button\r\n                                                className=\"btn btn-dark buttonImg\"\r\n                                                onClick={() => setNum(num + 1)}>Next</button>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container mt-4\">\r\n                                <h3>{model.name}</h3>\r\n                                <hr />\r\n                                <div className=\"col-sm\">\r\n                                    <blockquote className=\"blockquote\">\r\n                                        <p className=\"font-italic\">{model.description}</p>\r\n                                    </blockquote>\r\n                                </div>\r\n                                <div className=\"row justify-content-center text-left mt-3\">\r\n                                    <div className=\"col-sm\">\r\n                                        <table className=\"table table-sm\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <th>neck type</th>\r\n                                                    <td>{model.neckType}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>top/back/body</th>\r\n                                                    <td>{model.topbackbody}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>fret</th>\r\n                                                    <td>{model.fret}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>number of frets</th>\r\n                                                    <td>{model.numfrets}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>EQ</th>\r\n                                                    <td>{model.equaliser}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>string gauge</th>\r\n                                                    <td>{model.sgauge}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>hardware color</th>\r\n                                                    <td>{model.color}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div className=\"col-sm text-center\">\r\n                                        <div className=\"p-4 mb-2 bg-light text-dark border\">\r\n                                            <h3>Price: <strong>{maskNumber(model.price)}</strong></h3>\r\n                                            <button className=\"mt-3 mb-2 btn btn-warning btn-lg\"\r\n                                                onClick={() => {\r\n                                                    if (active) {\r\n                                                        setCart([...cart, { name: model.name, price: model.price, img: models }]);\r\n                                                        setAdd(true);\r\n                                                    } else {\r\n                                                        Swal.fire('Sign in to add items!');\r\n                                                    }\r\n                                                }}><strong>Add to cart</strong>\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                                    <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                                </svg>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            <h2>Bass Guitar Strings</h2>\r\n                            <div className=\"row justify-content-center\">\r\n                                {\r\n                                    fender_strings.map(item => (\r\n                                        <div className=\"col p-5\" key={item.fender7250}>\r\n                                            <NavLink to={{ pathname: \"/strings\", state: { view: true, stringbass: item.fender7250 } }}>\r\n                                                <img className=\"imgStrings\" src={item.fender7250.img} alt=\"\" />\r\n                                            </NavLink>\r\n                                            <h4 className=\"mt-2\">{maskNumber(item.fender7250.price)}</h4>\r\n                                            <button className=\"btn btn-warning\"\r\n                                                onClick={() => {\r\n                                                    if (active) {\r\n                                                        setCart([...cart, {\r\n                                                            name: item.fender7250.title, price: item.fender7250.price, img: item.fender7250.img\r\n                                                        }]);\r\n                                                        setAdd(true);\r\n                                                    } else {\r\n                                                        Swal.fire('Sign in to add items!');\r\n                                                    }\r\n                                                }}>Add to Cart</button>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                {\r\n                                    ddrio_strings.map(item => (\r\n                                        <div className=\"col p-5\" key={item.exl165}>\r\n                                            <NavLink to={{ pathname: \"/strings\", state: { view: true, stringbass: item.exl165 } }}>\r\n                                                <img className=\"imgStrings\" src={item.exl165.img} alt=\"\" />\r\n                                            </NavLink>\r\n                                            <h4 className=\"mt-2\">{maskNumber(item.exl165.price)}</h4>\r\n                                            <button className=\"btn btn-warning\"\r\n                                                onClick={() => {\r\n                                                    if (active) {\r\n                                                        setCart([...cart, {\r\n                                                            name: item.exl165.title, price: item.exl165.price, img: item.exl165.img\r\n                                                        }]);\r\n                                                        setAdd(true);\r\n                                                    } else {\r\n                                                        Swal.fire('Sign in to add items!');\r\n                                                    }\r\n                                                }}>Add to Cart</button>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                {\r\n                                    dr_strings.map(item => (\r\n                                        <div className=\"col p-5\" key={item.drhibeamxl}>\r\n                                            <NavLink to={{ pathname: \"/strings\", state: { view: true, stringbass: item.drhibeamxl } }}>\r\n                                                <img className=\"imgStrings\" src={item.drhibeamxl.img} alt=\"\" />\r\n                                            </NavLink>\r\n                                            <h4 className=\"mt-2\">{maskNumber(item.drhibeamxl.price)}</h4>\r\n                                            <button className=\"btn btn-warning\"\r\n                                                onClick={() => {\r\n                                                    if (active) {\r\n                                                        setCart([...cart, {\r\n                                                            name: item.drhibeamxl.title, price: item.drhibeamxl.price, img: item.drhibeamxl.img\r\n                                                        }]);\r\n                                                        setAdd(true);\r\n                                                    } else {\r\n                                                        Swal.fire('Sign in to add items!');\r\n                                                    }\r\n                                                }}>Add to Cart</button>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                {\r\n                                    ernie_ball_strings.map(item => (\r\n                                        <div className=\"col p-5\" key={item.eb2834}>\r\n                                            <NavLink to={{ pathname: \"/strings\", state: { view: true, stringbass: item.eb2834 } }}>\r\n                                                <img className=\"imgStrings\" src={item.eb2834.img} alt=\"\" />\r\n                                            </NavLink>\r\n                                            <h4 className=\"mt-2\">{maskNumber(item.eb2834.price)}</h4>\r\n                                            <button className=\"btn btn-warning\"\r\n                                                onClick={() => {\r\n                                                    if (active) {\r\n                                                        setCart([...cart, {\r\n                                                            name: item.eb2834.title, price: item.eb2834.price, img: item.eb2834.img\r\n                                                        }]);\r\n                                                        setAdd(true);\r\n                                                    } else {\r\n                                                        Swal.fire('Sign in to add items!');\r\n                                                    }\r\n                                                }}>Add to Cart</button>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"mt-5 mb-5\">\r\n                                <NavLink to=\"/warwick\">\r\n                                    <button type=\"button\" className=\"btn btn-light border buttonImg mr-2\">Warwick</button>\r\n                                </NavLink>\r\n                                <NavLink to=\"/bass-store/\">\r\n                                    <button type=\"button\" className=\"btn btn-light border buttonImg mr-2\" >Home</button>\r\n                                </NavLink>\r\n                                <NavLink to=\"/epiphone\">\r\n                                    <button type=\"button\" className=\"btn btn-light border buttonImg mr-2\" >Epiphone</button>\r\n                                </NavLink>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                            <div className=\"spinner\">\r\n                                <div className=\"bounce1\"></div>\r\n                                <div className=\"bounce2\"></div>\r\n                                <div className=\"bounce3\"></div>\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n        </div>\r\n    ) : null\r\n};\r\n\r\nexport default Ibanez;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getEpiphoneModels } from '../redux/bassModelsDucks';\r\nimport { getDaddarioStrings, getDRStrings, getErnieBallStrings, getFenderBallStrings } from '../redux/stringsDucks';\r\nimport { addCart } from '../redux/userDucks';\r\nimport Navbar from '../components/Navbar';\r\nimport '../styles/bassmodels-style.css';\r\nimport '../styles/loading-animation.css';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst Epiphone = () => {\r\n\r\n    const [num, setNum] = useState(1);\r\n    const [cart, setCart] = useState([]);\r\n    const [add, setAdd] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        localStorage.getItem('cart') && (setCart([...JSON.parse(localStorage.getItem('cart'))]));\r\n        const getEpiphoneRedux = () => {\r\n            dispatch(getEpiphoneModels(num));\r\n        };\r\n        const getBassStringsRedux = () => {\r\n            dispatch(getDaddarioStrings());\r\n            dispatch(getDRStrings());\r\n            dispatch(getErnieBallStrings());\r\n            dispatch(getFenderBallStrings());\r\n        };\r\n        getBassStringsRedux();\r\n        getEpiphoneRedux();\r\n    }, [num, dispatch]);\r\n\r\n    const models = useSelector(store => store.bassModels.resutls);\r\n    const list = useSelector(store => store.bassModels.list);\r\n    const loading = useSelector(store => store.bassModels.loading);\r\n    const model = useSelector(store => store.bassModels.model);\r\n    const ddrio_strings = useSelector(store => store.stringModels.ddrio);\r\n    const dr_strings = useSelector(store => store.stringModels.dr);\r\n    const ernie_ball_strings = useSelector(store => store.stringModels.ernie);\r\n    const fender_strings = useSelector(store => store.stringModels.fender);\r\n    const active = useSelector(store => store.googleUser.active);\r\n\r\n    add && (dispatch(addCart(cart)));\r\n\r\n    const maskNumber = (price) => {\r\n        const options = { style: 'currency', currency: 'USD' };\r\n        const numberFormat = new Intl.NumberFormat('en-US', options);\r\n        return numberFormat.format(price);\r\n    };\r\n\r\n    return models ? (\r\n        <div>\r\n            <Navbar cart={cart} />\r\n            <div className=\"text-center\">\r\n                <div className=\"backgroundBassModeltitle\">\r\n                    <h1 className=\"\">Epiphone Bass Guitars</h1>\r\n                </div>\r\n                {\r\n                    !loading ? (\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-center\">\r\n                                <img className=\"img-fluid\" src={models} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"row justify-content-center mt-3\">\r\n                                <div className=\"col-sm\">\r\n                                    {\r\n                                        num !== 1 && (\r\n                                            <button\r\n                                                className=\"btn btn-dark buttonImg mr-2\"\r\n                                                onClick={() => setNum(num - 1)}>Previous</button>\r\n                                        )\r\n                                    }\r\n                                    {\r\n                                        num !== list && (\r\n                                            <button\r\n                                                className=\"btn btn-dark buttonImg mr-2\"\r\n                                                onClick={() => setNum(num + 1)}>Next</button>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container mt-4\">\r\n                                <h3>{model.name}</h3>\r\n                                <hr />\r\n                                <div className=\"col-sm\">\r\n                                    <blockquote className=\"blockquote\">\r\n                                        <p className=\"font-italic\">{model.description}</p>\r\n                                    </blockquote>\r\n                                </div>\r\n                                <div className=\"row justify-content-center text-left mt-3\">\r\n                                    <div className=\"col-sm\">\r\n                                        <table className=\"table table-sm\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <th>neck type</th>\r\n                                                    <td>{model.neckType}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>top/back/body</th>\r\n                                                    <td>{model.topbackbody}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>fret</th>\r\n                                                    <td>{model.fret}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>number of frets</th>\r\n                                                    <td>{model.numfrets}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>EQ</th>\r\n                                                    <td>{model.equaliser}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>string gauge</th>\r\n                                                    <td>{model.sgauge}</td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>hardware color</th>\r\n                                                    <td>{model.color}</td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div className=\"col-sm text-center\">\r\n                                        <div className=\"p-4 mb-2 bg-light text-dark border\">\r\n                                            <h3>Price: <strong>{maskNumber(model.price)}</strong></h3>\r\n                                            <button className=\"mt-3 mb-2 btn btn-warning btn-lg\"\r\n                                                onClick={() => {\r\n                                                    if (active) {\r\n                                                        setCart([...cart, { name: model.name, price: model.price, img: models }]);\r\n                                                        setAdd(true);\r\n                                                    } else {\r\n                                                        Swal.fire('Sign in to add items!');\r\n                                                    }\r\n                                                }}><strong>Add to cart</strong>\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                                    <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                                </svg>\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                            <h2>Bass Guitar Strings</h2>\r\n                            <div className=\"row justify-content-center\">\r\n                                {\r\n                                    ddrio_strings.map(item => (\r\n                                        <div className=\"col p-5\" key={item.exl230}>\r\n                                            <NavLink to={{ pathname: \"/strings\", state: { view: true, stringbass: item.exl230 } }}>\r\n                                                <img className=\"imgStrings\" src={item.exl230.img} alt=\"\" />\r\n                                            </NavLink>\r\n                                            <h4 className=\"mt-2\">{maskNumber(item.exl230.price)}</h4>\r\n                                            <button className=\"btn btn-warning\"\r\n                                                onClick={() => {\r\n                                                    if (active) {\r\n                                                        setCart([...cart, {\r\n                                                            name: item.exl230.title, price: item.exl230.price, img: item.exl230.img\r\n                                                        }]);\r\n                                                        setAdd(true);\r\n                                                    } else {\r\n                                                        Swal.fire('Sign in to add items!');\r\n                                                    }\r\n                                                }}>Add to Cart</button>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                {\r\n                                    fender_strings.map(item => (\r\n                                        <div className=\"col p-5\" key={item.fender72505}>\r\n                                            <NavLink to={{ pathname: \"/strings\", state: { view: true, stringbass: item.fender72505 } }}>\r\n                                                <img className=\"imgStrings\" src={item.fender72505.img} alt=\"\" />\r\n                                            </NavLink>\r\n                                            <h4 className=\"mt-2\">{maskNumber(item.fender72505.price)}</h4>\r\n                                            <button className=\"btn btn-warning\"\r\n                                                onClick={() => {\r\n                                                    if (active) {\r\n                                                        setCart([...cart, {\r\n                                                            name: item.fender72505.title, price: item.fender72505.price, img: item.fender72505.img\r\n                                                        }]);\r\n                                                        setAdd(true);\r\n                                                    } else {\r\n                                                        Swal.fire('Sign in to add items!');\r\n                                                    }\r\n                                                }}>Add to Cart</button>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                {\r\n                                    ernie_ball_strings.map(item => (\r\n                                        <div className=\"col p-5\" key={item.eb2833}>\r\n                                            <NavLink to={{ pathname: \"/strings\", state: { view: true, stringbass: item.eb2833 } }}>\r\n                                                <img className=\"imgStrings\" src={item.eb2833.img} alt=\"\" />\r\n                                            </NavLink>\r\n                                            <h4 className=\"mt-2\">{maskNumber(item.eb2833.price)}</h4>\r\n                                            <button className=\"btn btn-warning\"\r\n                                                onClick={() => {\r\n                                                    if (active) {\r\n                                                        setCart([...cart, {\r\n                                                            name: item.eb2833.title, price: item.eb2833.price, img: item.eb2833.img\r\n                                                        }]);\r\n                                                        setAdd(true);\r\n                                                    } else {\r\n                                                        Swal.fire('Sign in to add items!');\r\n                                                    }\r\n                                                }}>Add to Cart</button>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                                {\r\n                                    dr_strings.map(item => (\r\n                                        <div className=\"col p-5\" key={item.drlorider}>\r\n                                            <NavLink to={{ pathname: \"/strings\", state: { view: true, stringbass: item.drlorider } }}>\r\n                                                <img className=\"imgStrings\" src={item.drlorider.img} alt=\"\" />\r\n                                            </NavLink>\r\n                                            <h4 className=\"mt-2\">{maskNumber(item.drlorider.price)}</h4>\r\n                                            <button className=\"btn btn-warning\"\r\n                                                onClick={() => {\r\n                                                    if (active) {\r\n                                                        setCart([...cart, {\r\n                                                            name: item.drlorider.title, price: item.drlorider.price, img: item.drlorider.img\r\n                                                        }]);\r\n                                                        setAdd(true);\r\n                                                    } else {\r\n                                                        Swal.fire('Sign in to add items!');\r\n                                                    }\r\n                                                }}>Add to Cart</button>\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"mt-5 mb-5\">\r\n                                <NavLink to=\"/warwick\">\r\n                                    <button type=\"button\" className=\"btn btn-light border buttonImg mr-2\">Warwick</button>\r\n                                </NavLink>\r\n                                <NavLink to=\"/ibanez\">\r\n                                    <button type=\"button\" className=\"btn btn-light border buttonImg mr-2\" >Ibañez</button>\r\n                                </NavLink>\r\n                                <NavLink to=\"/bass-store/\">\r\n                                    <button type=\"button\" className=\"btn btn-light border buttonImg mr-2\" >Home</button>\r\n                                </NavLink>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                            <div className=\"spinner\">\r\n                                <div className=\"bounce1\"></div>\r\n                                <div className=\"bounce2\"></div>\r\n                                <div className=\"bounce3\"></div>\r\n                            </div>\r\n                        )\r\n                }\r\n            </div>\r\n        </div>\r\n    ) : null\r\n};\r\n\r\nexport default Epiphone;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { getDaddarioStrings, getDRStrings, getErnieBallStrings, getFenderBallStrings } from '../redux/stringsDucks';\r\nimport { addCart } from '../redux/userDucks';\r\nimport Navbar from '../components/Navbar';\r\nimport '../styles/strings-style.css';\r\nimport '../styles/loading-animation.css';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst BassStrings = (props) => {\r\n\r\n    const [cart, setCart] = useState([]);\r\n    const [add, setAdd] = useState(false);\r\n\r\n    const [modelView, setModelView] = useState(props.location.state.view);\r\n    const [modelImg, setModelImg] = useState(props.location.state.stringbass.img);\r\n    const [modelTitle, setModelTitle] = useState(props.location.state.stringbass.title);\r\n    const [modelInfo, setModelInfo] = useState(props.location.state.stringbass.info);\r\n    const [modelPrice, setModelPrice] = useState(props.location.state.stringbass.price);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        localStorage.getItem('cart') && (setCart([...JSON.parse(localStorage.getItem('cart'))]));\r\n        const getBassStringsRedux = () => {\r\n            dispatch(getDaddarioStrings());\r\n            dispatch(getDRStrings());\r\n            dispatch(getErnieBallStrings());\r\n            dispatch(getFenderBallStrings());\r\n        };\r\n        getBassStringsRedux();\r\n    }, [dispatch]);\r\n\r\n    const ddrio_strings = useSelector(store => store.stringModels.ddrio);\r\n    const dr_strings = useSelector(store => store.stringModels.dr);\r\n    const ernie_ball_strings = useSelector(store => store.stringModels.ernie);\r\n    const fender_strings = useSelector(store => store.stringModels.fender);\r\n    const active = useSelector(store => store.googleUser.active);\r\n\r\n    const info = (obj) => {\r\n        window.scrollTo(0, 0);\r\n        const { img, title, info, price } = obj;\r\n        setModelView(true);\r\n        setModelImg(img);\r\n        setModelTitle(title);\r\n        setModelInfo(info);\r\n        setModelPrice(price);\r\n    };\r\n\r\n    add && (dispatch(addCart(cart)));\r\n\r\n    const maskNumber = (price) => {\r\n        const options = { style: 'currency', currency: 'USD' };\r\n        const numberFormat = new Intl.NumberFormat('en-US', options);\r\n        return numberFormat.format(price);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar cart={cart} />\r\n            <div className=\"text-center\">\r\n                <div className=\"backgroundStringsTitle\">\r\n                    <h1 className=\"\">Bass guitar strings</h1>\r\n                </div>\r\n                <div className=\"container\">\r\n                    {\r\n                        modelView && (\r\n                            <div className=\"border\">\r\n                                <div className=\"row justify-content-center p-4\">\r\n                                    <div className=\"col text-center\">\r\n                                        <img className=\"\" src={modelImg} alt=\"\" />\r\n                                    </div>\r\n                                    <div className=\"col text-left\">\r\n                                        <h4>{modelTitle}</h4>\r\n                                        <p>{modelInfo}</p>\r\n                                        <div className=\"row col\">\r\n                                            <h2 className=\"mr-5 mt-3\">Price: {maskNumber(modelPrice)}</h2>\r\n                                            <button className=\"btn btn-warning\"\r\n                                                onClick={() => {\r\n                                                    if (active) {\r\n                                                        setCart([...cart, {\r\n                                                            name: modelTitle, price: modelPrice, img: modelImg\r\n                                                        }]);\r\n                                                        setAdd(true);\r\n                                                    } else {\r\n                                                        Swal.fire('Sign in to add items!');\r\n                                                    }\r\n                                                }}><strong>Add to cart</strong>\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                                    <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                                </svg></button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <button type=\"button\"\r\n                                    className=\"btn btn-dark buttonImg mb-3\"\r\n                                    onClick={() => setModelView(false)}>Close</button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                    <div className=\"row justify-content-center\">\r\n                        {\r\n                            ddrio_strings.map(item => (\r\n                                <div className=\"col p-5\" key={item.exl160}>\r\n                                    <img type=\"button\" className=\"imgStrings\" src={item.exl160.img} alt=\"\"\r\n                                        onClick={() => info(item.exl160)} />\r\n                                    <p className=\"text-truncate\" style={{ width: '11rem', margin: 'auto' }}>{item.exl160.title}</p>\r\n                                    <h4>{maskNumber(item.exl160.price)}</h4>\r\n                                    <button className=\"btn btn-warning\"\r\n                                        onClick={() => {\r\n                                            if (active) {\r\n                                                setCart([...cart, {\r\n                                                    name: item.exl160.title, price: item.exl160.price, img: item.exl160.img\r\n                                                }]);\r\n                                                setAdd(true);\r\n                                            } else {\r\n                                                Swal.fire('Sign in to add items!');\r\n                                            }\r\n                                        }}>Add to Cart<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                            <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                        </svg></button>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {\r\n                            ddrio_strings.map(item => (\r\n                                <div className=\"col p-5\" key={item.exl165}>\r\n                                    <img type=\"button\" className=\"imgStrings\" src={item.exl165.img} alt=\"\"\r\n                                        onClick={() => info(item.exl165)} />\r\n                                    <p className=\"text-truncate\" style={{ width: '11rem', margin: 'auto' }}>{item.exl165.title}</p>\r\n                                    <h4>{maskNumber(item.exl165.price)}</h4>\r\n                                    <button className=\"btn btn-warning\"\r\n                                        onClick={() => {\r\n                                            if (active) {\r\n                                                setCart([...cart, {\r\n                                                    name: item.exl165.title, price: item.exl165.price, img: item.exl165.img\r\n                                                }]);\r\n                                                setAdd(true);\r\n                                            } else {\r\n                                                Swal.fire('Sign in to add items!');\r\n                                            }\r\n                                        }}>Add to Cart<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                            <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                        </svg></button>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {\r\n                            ddrio_strings.map(item => (\r\n                                <div className=\"col p-5\" key={item.exl170}>\r\n                                    <img type=\"button\" className=\"imgStrings\" src={item.exl170.img} alt=\"\"\r\n                                        onClick={() => info(item.exl170)} />\r\n                                    <p className=\"text-truncate\" style={{ width: '11rem', margin: 'auto' }}>{item.exl170.title}</p>\r\n                                    <h4>{maskNumber(item.exl170.price)}</h4>\r\n                                    <button className=\"btn btn-warning\"\r\n                                        onClick={() => {\r\n                                            if (active) {\r\n                                                setCart([...cart, {\r\n                                                    name: item.exl170.title, price: item.exl170.price, img: item.exl170.img\r\n                                                }]);\r\n                                                setAdd(true);\r\n                                            } else {\r\n                                                Swal.fire('Sign in to add items!');\r\n                                            }\r\n                                        }}>Add to Cart<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                            <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                        </svg></button>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {\r\n                            ddrio_strings.map(item => (\r\n                                <div className=\"col p-5\" key={item.exl230}>\r\n                                    <img type=\"button\" className=\"imgStrings\" src={item.exl230.img} alt=\"\"\r\n                                        onClick={() => info(item.exl230)} />\r\n                                    <p className=\"text-truncate\" style={{ width: '11rem', margin: 'auto' }}>{item.exl230.title}</p>\r\n                                    <h4>{maskNumber(item.exl230.price)}</h4>\r\n                                    <button className=\"btn btn-warning\"\r\n                                        onClick={() => {\r\n                                            if (active) {\r\n                                                setCart([...cart, {\r\n                                                    name: item.exl230.title, price: item.exl230.price, img: item.exl230.img\r\n                                                }]);\r\n                                                setAdd(true);\r\n                                            } else {\r\n                                                Swal.fire('Sign in to add items!');\r\n                                            }\r\n                                        }}>Add to Cart<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                            <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                        </svg></button>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        {\r\n                            dr_strings.map(item => (\r\n                                <div className=\"col p-5\" key={item.drblackb}>\r\n                                    <img type=\"button\" className=\"imgStrings\" src={item.drblackb.img} alt=\"\"\r\n                                        onClick={() => info(item.drblackb)} />\r\n                                    <p className=\"text-truncate\" style={{ width: '11rem', margin: 'auto' }}>{item.drblackb.title}</p>\r\n                                    <h4>{maskNumber(item.drblackb.price)}</h4>\r\n                                    <button className=\"btn btn-warning\"\r\n                                        onClick={() => {\r\n                                            if (active) {\r\n                                                setCart([...cart, {\r\n                                                    name: item.drblackb.title, price: item.drblackb.price, img: item.drblackb.img\r\n                                                }]);\r\n                                                setAdd(true);\r\n                                            } else {\r\n                                                Swal.fire('Sign in to add items!');\r\n                                            }\r\n                                        }}>Add to Cart<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                            <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                        </svg></button>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {\r\n                            dr_strings.map(item => (\r\n                                <div className=\"col p-5\" key={item.drhibeamm}>\r\n                                    <img type=\"button\" className=\"imgStrings\" src={item.drhibeamm.img} alt=\"\"\r\n                                        onClick={() => info(item.drhibeamm)} />\r\n                                    <p className=\"text-truncate\" style={{ width: '11rem', margin: 'auto' }}>{item.drhibeamm.title}</p>\r\n                                    <h4>{maskNumber(item.drhibeamm.price)}</h4>\r\n                                    <button className=\"btn btn-warning\"\r\n                                        onClick={() => {\r\n                                            if (active) {\r\n                                                setCart([...cart, {\r\n                                                    name: item.drhibeamm.title, price: item.drhibeamm.price, img: item.drhibeamm.img\r\n                                                }]);\r\n                                                setAdd(true);\r\n                                            } else {\r\n                                                Swal.fire('Sign in to add items!');\r\n                                            }\r\n                                        }}>Add to Cart<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                            <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                        </svg></button>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {\r\n                            dr_strings.map(item => (\r\n                                <div className=\"col p-5\" key={item.drhibeamxl}>\r\n                                    <img type=\"button\" className=\"imgStrings\" src={item.drhibeamxl.img} alt=\"\"\r\n                                        onClick={() => info(item.drhibeamxl)} />\r\n                                    <p className=\"text-truncate\" style={{ width: '11rem', margin: 'auto' }}>{item.drhibeamxl.title}</p>\r\n                                    <h4>{maskNumber(item.drhibeamxl.price)}</h4>\r\n                                    <button className=\"btn btn-warning\"\r\n                                        onClick={() => {\r\n                                            if (active) {\r\n                                                setCart([...cart, {\r\n                                                    name: item.drhibeamxl.title, price: item.drhibeamxl.price, img: item.drhibeamxl.img\r\n                                                }]);\r\n                                                setAdd(true);\r\n                                            } else {\r\n                                                Swal.fire('Sign in to add items!');\r\n                                            }\r\n                                        }}>Add to Cart<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                            <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                        </svg></button>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {\r\n                            dr_strings.map(item => (\r\n                                <div className=\"col p-5\" key={item.drlorider}>\r\n                                    <img type=\"button\" className=\"imgStrings\" src={item.drlorider.img} alt=\"\"\r\n                                        onClick={() => info(item.drlorider)} />\r\n                                    <p className=\"text-truncate\" style={{ width: '11rem', margin: 'auto' }}>{item.drlorider.title}</p>\r\n                                    <h4>{maskNumber(item.drlorider.price)}</h4>\r\n                                    <button className=\"btn btn-warning\"\r\n                                        onClick={() => {\r\n                                            if (active) {\r\n                                                setCart([...cart, {\r\n                                                    name: item.drlorider.title, price: item.drlorider.price, img: item.drlorider.img\r\n                                                }]);\r\n                                                setAdd(true);\r\n                                            } else {\r\n                                                Swal.fire('Sign in to add items!');\r\n                                            }\r\n                                        }}>Add to Cart<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                            <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                        </svg></button>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        {\r\n                            ernie_ball_strings.map(item => (\r\n                                <div className=\"col p-5\" key={item.eb2813}>\r\n                                    <img type=\"button\" className=\"imgStrings\" src={item.eb2813.img} alt=\"\"\r\n                                        onClick={() => info(item.eb2813)} />\r\n                                    <p className=\"text-truncate\" style={{ width: '11rem', margin: 'auto' }}>{item.eb2813.title}</p>\r\n                                    <h4>{maskNumber(item.eb2813.price)}</h4>\r\n                                    <button className=\"btn btn-warning\"\r\n                                        onClick={() => {\r\n                                            if (active) {\r\n                                                setCart([...cart, {\r\n                                                    name: item.eb2813.title, price: item.eb2813.price, img: item.eb2813.img\r\n                                                }]);\r\n                                                setAdd(true);\r\n                                            } else {\r\n                                                Swal.fire('Sign in to add items!');\r\n                                            }\r\n                                        }}>Add to Cart<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                            <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                        </svg></button>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {\r\n                            ernie_ball_strings.map(item => (\r\n                                <div className=\"col p-5\" key={item.eb2832}>\r\n                                    <img type=\"button\" className=\"imgStrings\" src={item.eb2832.img} alt=\"\"\r\n                                        onClick={() => info(item.eb2832)} />\r\n                                    <p className=\"text-truncate\" style={{ width: '11rem', margin: 'auto' }}>{item.eb2832.title}</p>\r\n                                    <h4>{maskNumber(item.eb2832.price)}</h4>\r\n                                    <button className=\"btn btn-warning\"\r\n                                        onClick={() => {\r\n                                            if (active) {\r\n                                                setCart([...cart, {\r\n                                                    name: item.eb2832.title, price: item.eb2832.price, img: item.eb2832.img\r\n                                                }]);\r\n                                                setAdd(true);\r\n                                            } else {\r\n                                                Swal.fire('Sign in to add items!');\r\n                                            }\r\n                                        }}>Add to Cart<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                            <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                        </svg></button>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {\r\n                            ernie_ball_strings.map(item => (\r\n                                <div className=\"col p-5\" key={item.eb2833}>\r\n                                    <img type=\"button\" className=\"imgStrings\" src={item.eb2833.img} alt=\"\"\r\n                                        onClick={() => info(item.eb2833)} />\r\n                                    <p className=\"text-truncate\" style={{ width: '11rem', margin: 'auto' }}>{item.eb2833.title}</p>\r\n                                    <h4>{maskNumber(item.eb2833.price)}</h4>\r\n                                    <button className=\"btn btn-warning\"\r\n                                        onClick={() => {\r\n                                            if (active) {\r\n                                                setCart([...cart, {\r\n                                                    name: item.eb2833.title, price: item.eb2833.price, img: item.eb2833.img\r\n                                                }]);\r\n                                                setAdd(true);\r\n                                            } else {\r\n                                                Swal.fire('Sign in to add items!');\r\n                                            }\r\n                                        }}>Add to Cart<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                            <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                        </svg></button>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {\r\n                            ernie_ball_strings.map(item => (\r\n                                <div className=\"col p-5\" key={item.eb2834}>\r\n                                    <img type=\"button\" className=\"imgStrings\" src={item.eb2834.img} alt=\"\"\r\n                                        onClick={() => info(item.eb2834)} />\r\n                                    <p className=\"text-truncate\" style={{ width: '11rem', margin: 'auto' }}>{item.eb2834.title}</p>\r\n                                    <h4>{maskNumber(item.eb2834.price)}</h4>\r\n                                    <button className=\"btn btn-warning\"\r\n                                        onClick={() => {\r\n                                            if (active) {\r\n                                                setCart([...cart, {\r\n                                                    name: item.eb2834.title, price: item.eb2834.price, img: item.eb2834.img\r\n                                                }]);\r\n                                                setAdd(true);\r\n                                            } else {\r\n                                                Swal.fire('Sign in to add items!');\r\n                                            }\r\n                                        }}>Add to Cart<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                            <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                        </svg></button>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        {\r\n                            fender_strings.map(item => (\r\n                                <div className=\"col p-5\" key={item.fender5250}>\r\n                                    <img type=\"button\" className=\"imgStrings\" src={item.fender5250.img} alt=\"\"\r\n                                        onClick={() => info(item.fender5250)} />\r\n                                    <p className=\"text-truncate\" style={{ width: '11rem', margin: 'auto' }}>{item.fender5250.title}</p>\r\n                                    <h4>{maskNumber(item.fender5250.price)}</h4>\r\n                                    <button className=\"btn btn-warning\"\r\n                                        onClick={() => {\r\n                                            if (active) {\r\n                                                setCart([...cart, {\r\n                                                    name: item.fender5250.title, price: item.fender5250.price, img: item.fender5250.img\r\n                                                }]);\r\n                                                setAdd(true);\r\n                                            } else {\r\n                                                Swal.fire('Sign in to add items!');\r\n                                            }\r\n                                        }}>Add to Cart<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                            <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                        </svg></button>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {\r\n                            fender_strings.map(item => (\r\n                                <div className=\"col p-5\" key={item.fender72505}>\r\n                                    <img type=\"button\" className=\"imgStrings\" src={item.fender72505.img} alt=\"\"\r\n                                        onClick={() => info(item.fender72505)} />\r\n                                    <p className=\"text-truncate\" style={{ width: '11rem', margin: 'auto' }}>{item.fender72505.title}</p>\r\n                                    <h4>{maskNumber(item.fender72505.price)}</h4>\r\n                                    <button className=\"btn btn-warning\"\r\n                                        onClick={() => {\r\n                                            if (active) {\r\n                                                setCart([...cart, {\r\n                                                    name: item.fender72505.title, price: item.fender72505.price, img: item.fender72505.img\r\n                                                }]);\r\n                                                setAdd(true);\r\n                                            } else {\r\n                                                Swal.fire('Sign in to add items!');\r\n                                            }\r\n                                        }}>Add to Cart<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                            <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                        </svg></button>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {\r\n                            fender_strings.map(item => (\r\n                                <div className=\"col p-5\" key={item.fender7250}>\r\n                                    <img type=\"button\" className=\"imgStrings\" src={item.fender7250.img} alt=\"\"\r\n                                        onClick={() => info(item.fender7250)} />\r\n                                    <p className=\"text-truncate\" style={{ width: '11rem', margin: 'auto' }}>{item.fender7250.title}</p>\r\n                                    <h4>{maskNumber(item.fender7250.price)}</h4>\r\n                                    <button className=\"btn btn-warning\"\r\n                                        onClick={() => {\r\n                                            if (active) {\r\n                                                setCart([...cart, {\r\n                                                    name: item.fender7250.title, price: item.fender7250.price, img: item.fender7250.img\r\n                                                }]);\r\n                                                setAdd(true);\r\n                                            } else {\r\n                                                Swal.fire('Sign in to add items!');\r\n                                            }\r\n                                        }}>Add to Cart<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                            <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                        </svg></button>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        {\r\n                            fender_strings.map(item => (\r\n                                <div className=\"col p-5\" key={item.fender9050}>\r\n                                    <img type=\"button\" className=\"imgStrings\" src={item.fender9050.img} alt=\"\"\r\n                                        onClick={() => info(item.fender9050)} />\r\n                                    <p className=\"text-truncate\" style={{ width: '11rem', margin: 'auto' }}>{item.fender9050.title}</p>\r\n                                    <h4>{maskNumber(item.fender9050.price)}</h4>\r\n                                    <button className=\"btn btn-warning\"\r\n                                        onClick={() => {\r\n                                            if (active) {\r\n                                                setCart([...cart, {\r\n                                                    name: item.fender9050.title, price: item.fender9050.price, img: item.fender9050.img\r\n                                                }]);\r\n                                                setAdd(true);\r\n                                            } else {\r\n                                                Swal.fire('Sign in to add items!');\r\n                                            }\r\n                                        }}>Add to Cart<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" fill=\"currentColor\" className=\"bi bi-cart4 ml-2\" viewBox=\"0 1 16 16\">\r\n                                            <path d=\"M0 2.5A.5.5 0 0 1 .5 2H2a.5.5 0 0 1 .485.379L2.89 4H14.5a.5.5 0 0 1 .485.621l-1.5 6A.5.5 0 0 1 13 11H4a.5.5 0 0 1-.485-.379L1.61 3H.5a.5.5 0 0 1-.5-.5zM3.14 5l.5 2H5V5H3.14zM6 5v2h2V5H6zm3 0v2h2V5H9zm3 0v2h1.36l.5-2H12zm1.11 3H12v2h.61l.5-2zM11 8H9v2h2V8zM8 8H6v2h2V8zM5 8H3.89l.5 2H5V8zm0 5a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0zm9-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2zm-2 1a2 2 0 1 1 4 0 2 2 0 0 1-4 0z\" />\r\n                                        </svg></button>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                    <hr />\r\n                    <h2>Bass Guitars</h2>\r\n                    <div className=\"mt-5 mb-5\">\r\n                        <NavLink to=\"/warwick\">\r\n                            <button type=\"button\" className=\"btn btn-light border buttonImg mr-2\">Warwick</button>\r\n                        </NavLink>\r\n                        <NavLink to=\"/ibanez\">\r\n                            <button type=\"button\" className=\"btn btn-light border buttonImg mr-2\" >Ibañez</button>\r\n                        </NavLink>\r\n                        <NavLink to=\"/epiphone\">\r\n                            <button type=\"button\" className=\"btn btn-light border buttonImg mr-2\" >Epiphone</button>\r\n                        </NavLink>\r\n                    </div>\r\n                    <hr />\r\n                    <NavLink to=\"/bass-store/\">\r\n                        <button className=\"btn btn-outline-dark buttonReturnHome mb-5\"\r\n                        >Return to Home</button>\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default BassStrings;\r\n","import { storage } from '../firebase';\r\n\r\n// Constants\r\nconst BASS_TABS_FOLDER = 'bass-tabs';\r\n\r\nconst initData = {\r\n    loading: false,\r\n    pdf: ''\r\n}\r\n// Types\r\nconst LOADING = 'LOADING';\r\nconst GET_BASS_TABS = 'GET_BASS_TABS';\r\nconst GET_BASS_TABS_LOCAL = 'GET_BASS_TABS_LOCAL';\r\n\r\n// Reducer\r\nexport default function tabsReducer(state = initData, action) {\r\n    switch (action.type) {\r\n        case LOADING:\r\n            return { ...state, loading: action.loading };\r\n        case GET_BASS_TABS:\r\n            return { ...state, pdf: action.src, loading: action.loading };\r\n        case GET_BASS_TABS_LOCAL:\r\n            return { ...state, pdf: action.src };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n// Actions\r\nexport const getBassTabs = (file) => async (dispatch) => {\r\n    // from local\r\n    if (localStorage.getItem(file)) {\r\n        dispatch({\r\n            type: GET_BASS_TABS_LOCAL,\r\n            src: JSON.parse(localStorage.getItem(file))\r\n        })\r\n        return\r\n    }\r\n    try {\r\n        // From firestore storage\r\n        dispatch({\r\n            type: LOADING,\r\n            loading: true\r\n        })\r\n        const pdf = await storage.ref().child(BASS_TABS_FOLDER).child(file).getDownloadURL();\r\n        dispatch({\r\n            type: GET_BASS_TABS,\r\n            loading: false,\r\n            src: pdf\r\n        })\r\n        localStorage.setItem(file, JSON.stringify(pdf));\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getBassTabs } from '../redux/bassTabsDucks';\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\nimport Navbar from '../components/Navbar';\r\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\r\nimport '../styles/basstabs-style.css';\r\nimport korg from '../sound/Korg-N1R-Metronome-Click.wav';\r\n\r\nconst PdfBassTabs = () => {\r\n\r\n    window.scrollTo(0, 0);\r\n\r\n    pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\r\n    const [numPages, setNumPages] = useState(null);\r\n    const [pageNumber, setPageNumber] = useState(1);\r\n    const onDocumentLoadSuccess = ({ numPages }) => { setNumPages(numPages); }\r\n\r\n    const [seconds, setSeconds] = useState(1);\r\n    const [play, setPlay] = useState(false);\r\n    const [click] = useState(new Audio());\r\n    const [sliderValue, setSliderValue] = useState(100);\r\n    const [catalog, setCatalog] = useState(true);\r\n    const [cart, setCart] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const pdf = useSelector(store => store.tabs.pdf);\r\n    const loading = useSelector(store => store.tabs.loading);\r\n\r\n    const files = [\r\n        { band: 'Alien Ant Farm', file: 'Alien Ant Farm - Smooth Criminal Bass.pdf' },\r\n        { band: 'Audioslave', file: 'Audioslave - Be Yourself Bass.pdf' },\r\n        { band: 'Bush', file: 'Bush - Come Down Bass.pdf' },\r\n        { band: 'Killswitch Engage', file: 'Killswitch Engage - Life To Lifeless Bass.pdf' },\r\n        { band: 'Korn', file: 'Korn - Freak On A Leash Bass.pdf' },\r\n        { band: 'Metallica', file: 'Metallica - Sad But True Bass.pdf' },\r\n        { band: 'Motley Crue', file: 'Motley Crue - Girls Girls Girls Bass.pdf' },\r\n        { band: 'Pantera', file: 'Pantera - Cowboys From Hell Bass.pdf' },\r\n        { band: 'Pearl Jam', file: 'Pearl Jam - Do The Evolution Bass.pdf' },\r\n        { band: 'Rage Against The Machine', file: 'Rage Against The Machine - Killing In The Name Bass.pdf' },\r\n        { band: 'Rammstein', file: 'Rammstein - Du Hast Bass.pdf' },\r\n    ]\r\n\r\n    const result = 60000 / sliderValue;\r\n\r\n    const stopMetro = () => {\r\n        setPlay(false);\r\n        setSeconds(1);\r\n    };\r\n\r\n    click.src = korg;\r\n\r\n    useEffect(() => {\r\n        localStorage.getItem('cart') && (setCart([...JSON.parse(localStorage.getItem('cart'))]));\r\n        if (play) {\r\n            const id = window.setInterval(() => {\r\n                setSeconds(seconds => seconds + 1);\r\n                click.play();\r\n            }, result);\r\n            return () => window.clearInterval(id);\r\n        }\r\n        return undefined;\r\n    }, [play, click, result]);\r\n\r\n    seconds === 5 && setSeconds(1);\r\n\r\n    const getPdf = (file) => {\r\n        dispatch(getBassTabs(file));\r\n        setCatalog(false);\r\n    };\r\n\r\n    const returnBassTabs = () => {\r\n        setNumPages(null);\r\n        setPageNumber(1);\r\n        setCatalog(true);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar cart={cart} />\r\n            <div>\r\n                <div className=\"text-center\">\r\n                    <div className=\"d-flex flex-row sticky-top justify-content-center backgroundModeltitle\">\r\n                        <div className=\"row mt-2 mb-2\">\r\n                            <h2 className=\"mr-3\"><strong>Metronome : {seconds}</strong></h2>\r\n                            <button type=\"button\"\r\n                                onClick={() => setSliderValue(sliderValue - 1)}\r\n                                className=\"btn btn-dark buttonBpmTbs mr-3\"><strong>-</strong></button>\r\n                            <h2>{sliderValue} BPM</h2>\r\n                            <button type=\"button\"\r\n                                onClick={() => setSliderValue(sliderValue + 1)}\r\n                                className=\"btn btn-dark buttonBpmTbs ml-3 mr-3\"><strong>+</strong></button>\r\n                            {\r\n                                !play ? (\r\n                                    <button className=\"btn btn-success buttonMetronomeTabs mr-3\"\r\n                                        type=\"button\"\r\n                                        onClick={() => setPlay(true)}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" fill=\"currentColor\" className=\"bi bi-play-circle-fill\" viewBox=\"0 0 16 16\">\r\n                                            <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM6.79 5.093A.5.5 0 0 0 6 5.5v5a.5.5 0 0 0 .79.407l3.5-2.5a.5.5 0 0 0 0-.814l-3.5-2.5z\" />\r\n                                        </svg></button>\r\n\r\n                                ) : (\r\n                                        <button className=\"btn btn-danger buttonMetronomeTabs mr-3\"\r\n                                            type=\"button\"\r\n                                            onClick={() => stopMetro()}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"28\" height=\"28\" fill=\"currentColor\" className=\"bi bi-stop-circle-fill\" viewBox=\"0 0 16 16\">\r\n                                                <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM6.5 5A1.5 1.5 0 0 0 5 6.5v3A1.5 1.5 0 0 0 6.5 11h3A1.5 1.5 0 0 0 11 9.5v-3A1.5 1.5 0 0 0 9.5 5h-3z\" />\r\n                                            </svg></button>\r\n                                    )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        {\r\n                            catalog ? (\r\n                                <div>\r\n                                    <div className=\"row justify-content-center\">\r\n                                        <ul className=\"list-group list-group-flush text-left\">\r\n                                            <li className=\"list-group-item text-center\"><h1>Bass Tabs</h1></li>\r\n                                            {\r\n                                                files.map(item => (\r\n                                                    <li key={item.band}\r\n                                                        className=\"list-group-item\">\r\n                                                        <button className=\"btn btn-info mr-3\"\r\n                                                            onClick={() => getPdf(item.file)}>View <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-file-text\" viewBox=\"0 0 16 16\">\r\n                                                                <path d=\"M5 4a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1H5zm-.5 2.5A.5.5 0 0 1 5 6h6a.5.5 0 0 1 0 1H5a.5.5 0 0 1-.5-.5zM5 8a.5.5 0 0 0 0 1h6a.5.5 0 0 0 0-1H5zm0 2a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1H5z\" />\r\n                                                                <path d=\"M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2zm10-1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1z\" />\r\n                                                            </svg></button>\r\n                                                        <strong>{item.file}</strong>\r\n                                                    </li>\r\n                                                ))\r\n                                            }\r\n                                        </ul>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <NavLink to=\"/bass-store/\">\r\n                                        <button className=\"btn btn-dark buttonReturnCatalog mt-5 mb-5\"\r\n                                            onClick={() => returnBassTabs()}>Return to Home</button>\r\n                                    </NavLink>\r\n                                </div>\r\n                            ) : (\r\n                                    !loading ? (\r\n                                        <div className=\"mb-5\">\r\n                                            <div className=\"d-flex justify-content-center\">\r\n                                                <Document\r\n                                                    file={pdf}\r\n                                                    onLoadSuccess={onDocumentLoadSuccess}\r\n                                                >\r\n                                                    <Page pageNumber={pageNumber} />\r\n                                                </Document>\r\n                                            </div>\r\n                                            <p>Page {pageNumber} of {numPages}</p>\r\n                                            <div className=\"row justify-content-center mb-3\">\r\n                                                {\r\n                                                    pageNumber !== 1 && (\r\n                                                        <button className=\"btn btn-secondary mr-5 buttonMetronomeTabs\"\r\n                                                            onClick={() => setPageNumber(pageNumber - 1)}\r\n                                                        >back</button>\r\n                                                    )\r\n                                                }\r\n                                                {\r\n                                                    pageNumber !== numPages && (\r\n                                                        <button className=\"btn btn-secondary buttonMetronomeTabs\"\r\n                                                            onClick={() => setPageNumber(pageNumber + 1)}\r\n                                                        >next</button>\r\n                                                    )\r\n                                                }\r\n                                            </div>\r\n                                            <button className=\"btn btn-info mt-5 mb-5 buttonReturnCatalog\"\r\n                                                onClick={() => returnBassTabs()}>Return to Bass Tabs</button>\r\n                                        </div>\r\n                                    ) : (\r\n                                            <div className=\"spinner\">\r\n                                                <div className=\"bounce1\"></div>\r\n                                                <div className=\"bounce2\"></div>\r\n                                                <div className=\"bounce3\"></div>\r\n                                            </div>\r\n                                        )\r\n                                )\r\n                        }\r\n                    </div >\r\n                </div >\r\n            </div >\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PdfBassTabs;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addCart } from '../redux/userDucks';\r\nimport Navbar from '../components/Navbar';\r\nimport '../styles/cart-style.css';\r\n\r\nconst Cart = () => {\r\n\r\n    var [cart, setCart] = useState([]);\r\n    const [add, setAdd] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector(store => store.googleUser.user);\r\n\r\n    useEffect(() => {\r\n        window.scrollTo(0, 0);\r\n        localStorage.getItem('cart') && (setCart([...JSON.parse(localStorage.getItem('cart'))]));\r\n    }, []);\r\n\r\n    var total = 0;\r\n    cart.forEach(i => total += parseInt(i.price));\r\n    var grandTotal = total;\r\n    grandTotal += 19.22 + 25;\r\n\r\n    add && (dispatch(addCart(cart)));\r\n\r\n    const removeItem = (item) => {\r\n        setAdd(true);\r\n        cart = cart.filter(i => i.name !== item);\r\n        setCart([...cart]);\r\n    };\r\n\r\n    const maskNumber = (price) => {\r\n        const options = { style: 'currency', currency: 'USD' };\r\n        const numberFormat = new Intl.NumberFormat('en-US', options);\r\n        return numberFormat.format(price);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar cart={cart} />\r\n            <div className=\"text-center\">\r\n                <div className=\"cart-background-title\">\r\n                    <h2>My Cart</h2>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"\">\r\n                        <div className=\"row justify-content-center\">\r\n                            <div className=\"col-9\">\r\n                                <table className=\"shadow-sm table text-left border\">\r\n                                    <thead className=\"thead-dark\">\r\n                                        <tr>\r\n                                            <th scope=\"col-sm\"></th>\r\n                                            <th scope=\"col-sm\">Article</th>\r\n                                            <th scope=\"col-sm\">Price</th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            cart.map((item, k) => (\r\n                                                <tr key={k}>\r\n                                                    <td><img className=\"img-table-cart\" src={item.img} alt=\"\" /></td>\r\n                                                    <td>{item.name}</td>\r\n                                                    <td>{maskNumber(item.price)}</td>\r\n                                                    <td><button className=\"btn btn-danger\"\r\n                                                        onClick={() => {\r\n                                                            removeItem(item.name);\r\n                                                        }}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-trash-fill\" viewBox=\"0 0 16 16\">\r\n                                                            <path d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z\" />\r\n                                                        </svg></button></td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                                <hr />\r\n                                <div className=\"mb-5\">\r\n                                    <table className=\"shadow-sm table border text-left\">\r\n                                        <tbody>\r\n                                            <tr className=\"bg-secondary text-white\">\r\n                                                <th>User :</th>\r\n                                                <td>\r\n                                                    <img className=\"img-display-user mr-3\" src={user.display} alt=\"\" />\r\n                                                    <strong>{user.displayName}</strong>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr className=\"bg-light text-dark\">\r\n                                                <th>Email :</th>\r\n                                                <td>\r\n                                                    <strong>{user.email}</strong>\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Grand Total :</td>\r\n                                                <td>{maskNumber(total)}</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Shipping Charge :</td>\r\n                                                <td>$25</td>\r\n                                            </tr>\r\n                                            <tr>\r\n                                                <td>Estimated Tax : </td>\r\n                                                <td>$19.22</td>\r\n                                            </tr>\r\n                                            <tr className=\"bg-light text-dark\">\r\n                                                <th>Total :</th>\r\n                                                {\r\n                                                    total !== 0 ? (\r\n                                                        <th>{maskNumber(grandTotal)}</th>\r\n                                                    ) : (\r\n                                                            <th>$0</th>\r\n                                                        )\r\n                                                }\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <hr />\r\n                        <NavLink to=\"/bass-store/\">\r\n                            <button className=\"btn btn-outline-dark buttonReturnHome mb-5\"\r\n                            >Return to Home</button>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default withRouter(Cart);\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"footer text-white bg-dark p-4 text-center mt-5\">\r\n            <div className=\"d-flex justify-content-center\">\r\n                <p className=\"card-text text-muted\">This site is for demo purposes and developer habilities.</p>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center mt-2\">\r\n                <small className=\"card-text text-muted\">Created by Juan Alberto Rodriguez / React js. 2021</small>\r\n            </div>\r\n        </footer>\r\n    )\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Index from './components/Index';\r\nimport Metronome from './components/Metronome';\r\nimport Warwick from './components/Warwick';\r\nimport Ibanez from './components/Ibanez';\r\nimport Epiphone from './components/Epiphone';\r\nimport BassStrings from './components/BassStrings';\r\nimport PdfBassTabs from './components/PdfBassTabs';\r\nimport Cart from './components/Cart';\r\nimport Footer from './components/Footer';\r\n\r\nfunction App() {\r\n\r\n  const active = useSelector(store => store.googleUser.active);\r\n\r\n  const PrivateRoute = ({ component, path, ...rest }) => {\r\n    if (active) {\r\n      return <Route component={component} path={path} {...rest} />\r\n    } else {\r\n      return <Redirect to=\"/bass-store\" {...rest} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route component={Index} path=\"/bass-store\" exact />\r\n          <Route component={Warwick} path=\"/warwick\" exact />\r\n          <Route component={Ibanez} path=\"/ibanez\" exact />\r\n          <Route component={Epiphone} path=\"/epiphone\" exact />\r\n          <Route component={BassStrings} path=\"/strings\" exact />\r\n          <Route component={Metronome} path=\"/metronome\" exact />\r\n          <Route component={PdfBassTabs} path=\"/basstabs\" exact />\r\n          <PrivateRoute component={Cart} path=\"/usercart\" exact />\r\n        </Switch>\r\n        <Footer></Footer>\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport modelReducer from './bassModelsDucks';\r\nimport bassStrReducer from './stringsDucks';\r\nimport tabsReducer from './bassTabsDucks';\r\nimport userReducer, { loggedUser } from './userDucks';\r\n\r\nconst rootReducer = combineReducers({\r\n    bassModels: modelReducer,\r\n    stringModels: bassStrReducer,\r\n    tabs: tabsReducer,\r\n    googleUser: userReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function generateStore() {\r\n    const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n    loggedUser()(store.dispatch);\r\n    return store;\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App.jsx';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport generateStore from './redux/store';\r\n\r\nconst store = generateStore();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}